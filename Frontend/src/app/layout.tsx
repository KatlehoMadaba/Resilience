import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AuthProvider } from "@/providers/auth-provider";
import { UserProvider } from "@/providers/users-providers";
import ConfigProvider from "antd/es/config-provider";
import ResilienceHeader from '@/components/header/Header';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
const ReslienceColors = {
  token: {
    colorPrimary: "#38512f",
    colorInfo: "##8F997F",
    colorBgBase: "#fef5e7",
    wireframe: true,
  },
};
export default function RootLayout({
  children,
}: Readonly<{ 
  children: React.ReactNode;
}>) {
  return (
    <ConfigProvider theme={ReslienceColors}>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <UserProvider>
          <ResilienceHeader />
            <AuthProvider>{children}</AuthProvider>
          </UserProvider>
        </body>
      </html>
    </ConfigProvider>
  );
}
